apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: validator-plugin-oci
    app.kubernetes.io/part-of: validator-plugin-oci
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      {{- if .Values.proxy.enabled }}
      initContainers:
      - name: init-certs
        image: {{ required ".Values.proxy.image is required!" .Values.proxy.image }}
        command: ["/bin/bash", "-c"]
        args: ["update-ca-certificates && cp -r /etc/ca-certificates.conf /usr/share/ca-certificates /etc/ssl/certs"]
        volumeMounts:
        - name: ca-pemstore
          mountPath: /usr/local/share/ca-certificates
          readOnly: false
        - name: certs
          mountPath: /etc/ssl/certs
          readOnly: false
        securityContext:
          runAsNonRoot: true
      {{- end }}
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
          {{- if .Values.env }}
          {{- toYaml .Values.env | nindent 8 }}
          {{- end }}
        {{- if .Values.proxy.enabled }}
        volumeMounts:
        - name: certs
          mountPath: /etc/ca-certificates.conf
          subPath: ca-certificates.conf
          readOnly: true
        - name: certs
          mountPath: /usr/share/ca-certificates
          subPath: ca-certificates
          readOnly: true
        - name: certs
          mountPath: /etc/ssl/certs
          readOnly: true
        {{- end }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext | nindent 10 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      {{- if .Values.proxy.enabled }}
      volumes:
      - name: ca-pemstore
        secret:
          secretName: {{ required ".Values.proxy.secretName is required!" .Values.proxy.secretName }}
      - name: certs
        emptyDir: {}
      {{- end}}
